kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name | quote }}
  namespace: {{ .Values.namespace | quote }}
  labels:
    app: {{ .Values.name | quote }}
spec:
  triggers:
  - type: ConfigChange
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Values.name | quote }}
    spec:
      serviceAccountname: {{ .Values.name | quote }}
      serviceAccount: {{ .Values.name | quote }}
      containers:
      - name: {{ .Values.name | quote }}
        image: gerald1248/k8s-network-policy-viewer
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        livenessProbe:
          exec:
            command:
            - date
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - date
          initialDelaySeconds: 20
          periodSeconds: 20
        env:
        - name: POD_NAMESPACE
          value: {{ .Values.namespace | quote }}
        - name: BACKUP_SECRETS
          value: {{ .Values.backupSecrets | quote }}
        - name: K8S_BACKUP_NAMESPACES
          value: {{ .Values.backupNamespaces | quote }}
        - name: K8S_BACKUP_ALL
{{ if eq .Values.backupNamespaces "*" }}
          value: "true"
{{ else }}
          value: "false"
{{ end }}
        - name: K8S_BACKUP_RETAIN_DAYS
          value: {{ .Values.backupRetainDays | quote }}
        volumeMounts:
        - name: "{{ .Values.name }}-data"
          mountPath: /k8s-backup
{{ if .Values.backupEphemeral }}
      volumes:
      - name: "{{ .Values.name }}-data"
        emptyDir: {}
{{ else }}
      volumes:
      - name: "{{ .Values.name }}-data"
        persistentVolumeClaim:
          claimName: {{ .Values.name | quote }}
{{ end }}
